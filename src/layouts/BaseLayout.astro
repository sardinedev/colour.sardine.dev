---
import Navigation from "../components/Navigation.astro";
import "../styles/global.css";

export interface Props {
  title: string;
  description?: string;
}

const { title, description = "" } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    <meta name="description" content={description} />

    <!-- Performance monitoring -->
    <script>
      LUX = (function () {
        function n() {
          return Date.now ? Date.now() : +new Date();
        }
        var r,
          t = n(),
          a = window.performance || {},
          e = a.timing || {
            activationStart: 0,
            navigationStart:
              (null === (r = window.LUX) || void 0 === r ? void 0 : r.ns) || t,
          };
        function i() {
          return a.now
            ? ((r = a.now()), Math.floor(r))
            : n() - e.navigationStart;
          var r;
        }
        ((LUX = window.LUX || {}).ac = []),
          (LUX.addData = function (n, r) {
            return LUX.cmd(["addData", n, r]);
          }),
          (LUX.cmd = function (n) {
            return LUX.ac.push(n);
          }),
          (LUX.getDebug = function () {
            return [[t, 0, []]];
          }),
          (LUX.init = function () {
            return LUX.cmd(["init"]);
          }),
          (LUX.mark = function () {
            for (var n = [], r = 0; r < arguments.length; r++)
              n[r] = arguments[r];
            if (a.mark) return a.mark.apply(a, n);
            var t = n[0],
              e = n[1] || {};
            void 0 === e.startTime && (e.startTime = i());
            LUX.cmd(["mark", t, e]);
          }),
          (LUX.markLoadTime = function () {
            return LUX.cmd(["markLoadTime", i()]);
          }),
          (LUX.measure = function () {
            for (var n = [], r = 0; r < arguments.length; r++)
              n[r] = arguments[r];
            if (a.measure) return a.measure.apply(a, n);
            var t,
              e = n[0],
              o = n[1],
              u = n[2];
            t = "object" == typeof o ? n[1] : { start: o, end: u };
            t.duration || t.end || (t.end = i());
            LUX.cmd(["measure", e, t]);
          }),
          (LUX.send = function () {
            return LUX.cmd(["send"]);
          }),
          (LUX.ns = t);
        var o = LUX;
        return (
          (window.LUX_ae = []),
          window.addEventListener("error", function (n) {
            window.LUX_ae.push(n);
          }),
          o
        );
      })();
    </script>
    <script
      src="https://cdn.speedcurve.com/js/lux.js?id=4648753416"
      defer
      crossorigin="anonymous"></script>

    <!-- Favicons -->
    <link
      rel="icon"
      href="/icons/favicon.svg"
      sizes="any"
      type="image/svg+xml"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/icons/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/icons/favicon-16x16.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="48x48"
      href="/icons/favicon-48x48.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="192x192"
      href="/icons/favicon-192x192.png"
    />
    <link
      rel="apple-touch-icon"
      type="image/png"
      sizes="167x167"
      href="/icons/favicon-167x167.png"
    />
    <link
      rel="apple-touch-icon"
      type="image/png"
      sizes="180x180"
      href="/icons/favicon-180x180.png"
    />

    <!-- Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:site_name" content="Colour - @sardine/colour" />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:creator" content="@marabyte_" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />

    <!-- Fonts -->
    <link
      rel="preload"
      href="/fonts/FiraMono-Regular.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
  </head>
  <body
    class="min-h-screen flex relative 2xl:justify-center 2xl:flex-row bg-primary text-base-color"
  >
    <Navigation currentPath="/" />
    <main
      class="mt-16 xl:mt-24 px-5 w-full xl:w-96 max-w-7xl mx-auto flex-grow 2xl:mx-0"
    >
      <slot />
    </main>
  </body>
</html>
